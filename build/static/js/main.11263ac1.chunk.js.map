{"version":3,"sources":["store/actions.js","store/reducer.js","store/context.js","store/index.jsx","containers/WeatherScreen/styles.js","components/Autocomplete/styles.js","components/Text/index.js","utils/index.js","components/Autocomplete/index.js","components/ForcastItem/styles.js","components/ForcastItem/index.js","components/ForcastList/styles.js","components/ForcastList/index.js","services/index.js","data/locations.js","components/SunriseChart/styles.js","components/SunriseChart/index.js","components/TemperatureChart/styles.js","components/TemperatureChart/index.js","components/WeatherStats/styles.js","components/WeatherStats/index.js","components/WeatherCard/styles.js","components/WeatherCard/index.js","containers/WeatherScreen/index.js","containers/App/index.js","reportWebVitals.js","index.js"],"names":["WEATHER_LOCATION_FETCHING","WEATHER_LOCATION_SUCCESS","WEATHER_LOCATION_QUERY","WEATHER_LOCATION_SELECTED","WEATHER_LOCATION_WEATHER_FETCHING","WEATHER_LOCATION_WEATHER_SUCCESS","WEATHER_FETCHING","WEATHER_SUCCESS","WEATHER_ERROR","WEATHER_DAY_SELECTED","initialState","locations","fetching","query","weathers","results","selectedDay","weather","error","hourly","daily","storeReducer","state","action","type","payload","name","storeContext","createContext","StoreProvider","children","Provider","useReducer","store","dispatch","value","Container","styled","div","Loader","LocationIcon","span","SearchIcon","button","Input","input","ResultsList","Result","ResultWeather","Icon","img","Text","props","bold","semibold","faded","capitalize","getCelsius","kelvin","Math","round","getDayName","date","console","log","getDay","getImageName","title","getHourlyData","dayStart","moment","startOf","add","unix","dayEnd","endOf","result","forEach","h","i","hour","dt","push","temp","Autocomplete","onChange","onClick","icon","faMapMarkerAlt","faSearch","length","map","r","find","w","locationName","slice","toUpperCase","indexOf","main","src","alt","ForcastCard","RadioInput","Row","p","ForcastItem","forecast","day","checked","max","min","ForcastList","forcast","Date","setDate","getDate","locationsArray","JSON","parse","getWeatherShort","loc","a","axios","get","params","lat","lon","appid","getWeather","cnt","ChartContainer","StatsContainer","Stat","data","SunriseChart","sunrise","sunset","format","width","height","margin","right","left","layout","stackOffset","barCategoryGap","barGap","reverseStackOrder","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","tickLine","domain","duplicateDomain","stroke","fill","fillOpacity","legendType","dot","TemperatureChart","top","bottom","strokeOpacity","strokeWidth","vertical","horizontal","axisLine","isAnimationActive","WheatherStats","pressure","humidity","Header","WeatherCard","current","WeatherScreen","useContext","onSearchClick","item","then","resp","onSearch","func","delay","debounceTimer","context","this","args","arguments","clearTimeout","setTimeout","apply","debounce","e","target","trim","filter","l","toLowerCase","includes","getLocations","Promise","all","useEffect","Fragment","Number","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11263ac1.chunk.js","sourcesContent":["export const WEATHER_LOCATION_FETCHING = 'WEATHER_LOCATION_FETCHING';\nexport const WEATHER_LOCATION_SUCCESS = 'WEATHER_LOCATION_SUCCESS';\nexport const WEATHER_LOCATION_QUERY = 'WEATHER_LOCATION_QUERY';\nexport const WEATHER_LOCATION_SELECTED = 'WEATHER_LOCATION_SELECTED';\nexport const WEATHER_LOCATION_WEATHER_FETCHING = 'WEATHER_LOCATION_WEATHER_FETCHING';\nexport const WEATHER_LOCATION_WEATHER_SUCCESS = 'WEATHER_LOCATION_WEATHER_SUCCESS';\nexport const WEATHER_FETCHING = 'WEATHER_FETCHING';\nexport const WEATHER_SUCCESS = 'WEATHER_SUCCESS';\nexport const WEATHER_ERROR = 'WEATHER_ERROR';\nexport const WEATHER_DAY_SELECTED = 'WEATHER_DAY_SELECTED';","import { WEATHER_DAY_SELECTED, WEATHER_LOCATION_QUERY, WEATHER_ERROR, WEATHER_FETCHING, WEATHER_LOCATION_SELECTED, WEATHER_LOCATION_WEATHER_SUCCESS, WEATHER_LOCATION_FETCHING, WEATHER_LOCATION_SUCCESS, WEATHER_SUCCESS, WEATHER_LOCATION_WEATHER_FETCHING } from './actions';\n\nexport const initialState = {\n  locations: {\n    fetching: false,\n    query: '',\n    weathers: [],\n    results: [],\n  },\n  selectedDay: 0,\n  weather: {\n    fetching: true,\n    error: true,\n    hourly: [],\n    daily: [],\n  }\n};\n\nexport const storeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case WEATHER_LOCATION_QUERY:\n      return { ...state, locations: { ...state.locations, query: action.payload } };\n    case WEATHER_LOCATION_FETCHING:\n      return { ...state, locations: { ...state.locations, fetching: true, results: [], weathers: [] } };\n    case WEATHER_LOCATION_SUCCESS:\n      return { ...state, locations: { ...state.locations, fetching: false, ...action.payload } };\n    case WEATHER_LOCATION_SELECTED:\n      return { ...state, locations: { ...state.locations, query: `${action.payload.name}, ${action.payload.state}`, results: [], weathers: [] } };\n    case WEATHER_LOCATION_WEATHER_FETCHING:\n      return { ...state, locations: { ...state.locations, fetching: true, weathers: [] } };\n    case WEATHER_LOCATION_WEATHER_SUCCESS:\n      return { ...state, locations: { ...state.locations, weathers: [...state.locations.weathers, ...action.payload] } };\n    case WEATHER_FETCHING:\n      return { ...state, weather: { ...state.weather, fetching: true, selectedDay: 0, hourly: [], daily: [] } };\n    case WEATHER_SUCCESS:\n      return { ...state, weather: { ...state.weather, fetching: false, hourly: action.payload.hourly, daily: action.payload.daily } };\n    case WEATHER_ERROR:\n      return { ...state, weather: { ...state.weather, fetching: false, error: true, hourly: [], daily: [] } };\n    case WEATHER_DAY_SELECTED:\n      return { ...state, selectedDay: action.payload };\n    default:\n      return state;\n  }\n};\n","// store.js\nimport { createContext } from 'react';\nimport { initialState } from './reducer';\n\nconst storeContext = createContext(initialState);\n\nexport default storeContext;\n","import React, { useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport storeContext from './context';\nimport { initialState, storeReducer } from './reducer';\n\nconst StoreProvider = ({ children }) => {\n  const { Provider } = storeContext;\n  const [store, dispatch] = useReducer(storeReducer, initialState);\n\n  return (\n    <Provider value={{ store, dispatch }}>{children}</Provider>\n  );\n};\n\nStoreProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport { storeContext, StoreProvider };\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n`;\n\nexport const Loader = styled.div`\n  color: var(--primary);\n  text-indent: -9999em;\n  margin: 88px auto;\n  position: relative;\n  font-size: 11px;\n  transform: translateZ(0);\n  -webkit-animation-delay: -.16s;\n  animation-delay: -.16s;\n  \n  &, &:after, &:before {\n    background: var(--primary);\n    -webkit-animation: load1 1s ease-in-out infinite;\n    animation: load1 1s ease-in-out infinite;\n    width: 1em;\n    height: 4em;\n  }\n`;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 1.5rem;\n`;\n\nexport const LocationIcon = styled.span`\n  font-size: 1.25rem;\n  display:flex;\n  align-items: center;\n  justify-content: center;\n  height: 1.25rem;\n  width: 1.25rem;\n  position: absolute;\n  left: 1rem; \n`;\n\nexport const SearchIcon = styled.button`\n  font-size: 1.25rem;\n  background: transparent;\n  border: none;\n  position: absolute;\n  right: 1rem;\n  margin: 0;\n`;\n\nexport const Input = styled.input`\n  box-shadow: var(--shadow);\n  border-radius: 8px;\n  border: none;\n  display: block;\n  height: 2.5rem;\n  padding: 1.75rem 1.75rem 1.75rem 3rem;\n  font-weight: 500;\n  text-transform: capitalize;\n  transition: box-shadow .2s ease;\n  width: 100%;\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 1px 2px var(--primary)\n  }\n`;\n\nexport const ResultsList = styled.div`\n  background: #fff;\n    border-radius: 8px;\n    box-shadow: var(--shadow);\n    position: absolute;\n    top: 110%;\n    left: 0;\n    right: 0;\n    z-index: 10;\n`;\nexport const Result = styled.div`\n    border-bottom: 1px solid rgba(0,0,0,.1);\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: .75rem 1.5rem;\n    animation: ResultsAnimation .5s;\n    text-transform: capitalize;\n`;\n\nexport const ResultWeather = styled.div`\n  display:flex;\n  > div {\n    display: flex;\n    flex-direction: column;\n  }\n`;\nexport const Icon = styled.img`\n  height: 40px;\n  width: 40px;\n  margin-left: .5rem;\n`;\n","import styled from \"styled-components\";\n\nconst Text = styled.span`\n  font-weight: ${props => props.bold ? 700 : (props.semibold ? 700 : 'inherit')};\n  color: ${props => props.faded ? 'var(--grey500)' : 'var(--grey900)'};\n  text-transform: ${props => props.capitalize ? 'capitalize' : 'inherit'};\n`;\n\nexport default Text;","import moment from \"moment\";\n\nexport const debounce = (func, delay) => {\n  let debounceTimer;\n  return function () {\n    const context = this;\n    const args = arguments;\n    clearTimeout(debounceTimer)\n    debounceTimer = setTimeout(() => func.apply(context, args), delay);\n  };\n}\n\nexport const getCelsius = (kelvin) => Math.round(kelvin - 273.15, 2);\n\nexport const getDayName = (date) => {\n  console.log(date);\n  const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  const dayName = days[date.getDay()];\n  return dayName;\n}\n\nexport const getImageName = (title) => {\n  switch (title) {\n    case 'Clouds':\n      return 'cloudy.png';\n    case 'Rain':\n      return 'rain.png';\n    default:\n      return 'sun.png';\n  }\n};\n\nexport const getHourlyData = (hourly, selectedDay) => {\n  const dayStart = moment().startOf('day').add(selectedDay, 'days').unix();\n  const dayEnd = moment().endOf('day').add(selectedDay, 'days').unix();\n  const hourStart = moment().startOf('hour');\n  const result = [];\n  hourly.forEach((h, i) => {\n    const hour = moment(h.dt * 1000).unix();\n    if (hour >= dayStart && hour <= dayEnd) {\n      result.push({ temp: h.temp, hour });\n    }\n  });\n  console.log(result);\n  return result;\n};","import React from \"react\";\nimport { Container, LocationIcon, SearchIcon, Input, ResultsList, Result, ResultWeather, Icon } from \"./styles\";\nimport { faMapMarkerAlt, faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Text from \"../Text\";\nimport { getCelsius, getImageName } from \"../../utils\";\n\nconst Autocomplete = ({ onChange, locations, onClick }) => {\n  return (\n    <Container>\n      <LocationIcon>\n        <FontAwesomeIcon icon={faMapMarkerAlt} />\n      </LocationIcon>\n      <Input onChange={onChange} value={locations.query} />\n      <SearchIcon>\n        <FontAwesomeIcon icon={faSearch} />\n      </SearchIcon>\n      {\n        locations.results.length && locations.weathers.length\n          ? (\n            <ResultsList>\n              {\n                locations.results.map(r => {\n                  const weather = locations.weathers.find(w => w.locationName === r.name);\n                  return (\n                    <Result key={r.name} onClick={() => onClick(r)}>\n                      {console.log(r.name, locations.query)}\n                      <Text capitalize>\n                        {r.name.slice(0, r.name.toUpperCase().indexOf(locations.query.toUpperCase()))}\n                        <Text bold capitalize>{locations.query}</Text>\n                        {r.name.slice(r.name.toUpperCase().indexOf(locations.query.toUpperCase()) + locations.query.length)}\n                        <Text faded> {r.state}</Text>\n                      </Text>\n                      {\n                        weather\n                        && (\n                          <ResultWeather>\n                            <div>\n                              <Text>{getCelsius(weather.main.temp)}° C</Text>\n                              <Text faded>{weather.weather[0].main}</Text>\n                            </div>\n                            <Icon src={`/images/${getImageName(weather.weather[0].main)}`} alt={weather.weather[0].main} />\n                          </ResultWeather>\n                        )\n                      }\n                    </Result>\n                  )\n                })\n              }\n            </ResultsList>\n          )\n          : null\n      }\n    </Container>\n  )\n}\n\nexport default Autocomplete;\n","import styled from \"styled-components\";\n\nexport const ForcastCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: .5rem 1rem;\n  margin-right: .5rem;\n  transition: box-shadow .3s ease-in;\n  width: 81px;\n`;\nexport const Container = styled.div`\n  position: relative;\n  margin: .25rem;\n  \n  &:last-child ${ForcastCard} {\n    margin-right:0;\n  }\n`;\nexport const RadioInput = styled.input`\n  cursor: pointer;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n  opacity: 0;\n\n  &:checked ~ ${ForcastCard} {\n    background: #fffdf7;\n    box-shadow: 0 0 1px 3px var(--primary);\n    transition: box-shadow .3s ease-in;\n  }\n`;\n\nexport const Icon = styled.img`\n  margin: .5rem;\n  width: 27px;\n`;\nexport const Row = styled.p`\n  margin: 0 0 .25rem;\n  font-weight: 500;\n`;\n","import React from \"react\";\nimport { getCelsius, getDayName, getImageName } from \"../../utils\";\nimport Text from \"../Text\";\nimport { Container, Icon, Row, ForcastCard, RadioInput } from \"./styles\";\n\nconst ForcastItem = ({ forecast, day, checked, onClick, value }) => {\n  return (\n    <Container>\n      <RadioInput type=\"radio\" name=\"forcast-day\" checked={checked} onClick={onClick} value={value} />\n      <ForcastCard>\n        <Row>\n          <Text semibold>{getDayName(day)}</Text>\n        </Row>\n        <Row>\n          <Text semibold>\n            {getCelsius(forecast.temp.max)}°{' '}\n            <Text faded>{getCelsius(forecast.temp.min)}°</Text>\n          </Text>\n        </Row>\n        <Icon src={`/images/${getImageName(forecast.weather[0].main)}`}></Icon>\n        <Row>\n          <Text faded semibold>{forecast.weather[0].main}</Text>\n        </Row>\n      </ForcastCard>\n    </Container>\n  );\n}\n\nexport default ForcastItem;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  font-size: .95rem;\n  overflow-x: scroll;\n  margin-bottom: 1.5rem;\n  white-space: nowrap;\n`;\n","import React from \"react\";\nimport ForcastItem from \"../ForcastItem\";\nimport { Container } from \"./styles\";\n\nconst ForcastList = ({ daily, selectedDay, onClick }) => {\n  return (\n    <Container>\n      {\n        daily.map((forcast, i) => {\n          const date = new Date();\n          const day = new Date(date.setDate(date.getDate() + i));\n          return (\n            <ForcastItem\n              key={i}\n              forecast={forcast}\n              day={day}\n              checked={i === selectedDay}\n              onClick={onClick}\n              value={i}\n            />\n          );\n        })\n      }\n    </Container>\n  )\n};\n\nexport default ForcastList;\n","import locations from \"../data/locations\";\nimport axios from \"axios\";\n\nexport const locationsArray = JSON.parse(locations);\n\nexport const getLocations = (query) => {\n  return locationsArray.filter(l => l.name.toLowerCase().includes(query.toLowerCase()));\n}\n\nexport const getWeatherShort = async (loc) => {\n  return axios.get('http://api.openweathermap.org/data/2.5/weather', {\n    params: {\n      lat: loc.lat,\n      lon: loc.lon,\n      appid: '6cc6ac631730d728804ec2ccecb4f575'\n    }\n  });\n}\n\nexport const getWeather = async (loc) => {\n  return axios.get('http://api.openweathermap.org/data/2.5/onecall', {\n    params: {\n      lat: loc.lat,\n      lon: loc.lon,\n      cnt: 20,\n      appid: '6cc6ac631730d728804ec2ccecb4f575'\n    }\n  });\n}","export default `[\n  {\n    \"name\": \"Mumbai\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"18.975\",\n    \"lon\": \"72.825833\"\n  },\n  {\n    \"name\": \"Delhi\",\n    \"state\": \"Delhi\",\n    \"lat\": \"28.666667\",\n    \"lon\": \"77.216667\"\n  },\n  {\n    \"name\": \"Bangalore\",\n    \"state\": \"Karnataka\",\n    \"lat\": \"12.983333\",\n    \"lon\": \"77.583333\"\n  },\n  {\n    \"name\": \"Hyderabad\",\n    \"state\": \"Telangana\",\n    \"lat\": \"17.375278\",\n    \"lon\": \"78.474444\"\n  },\n  {\n    \"name\": \"Ahmedabad\",\n    \"state\": \"Gujarat\",\n    \"lat\": \"23.033333\",\n    \"lon\": \"72.616667\"\n  },\n  {\n    \"name\": \"Chennai\",\n    \"state\": \"Tamil Nadu\",\n    \"lat\": \"13.083333\",\n    \"lon\": \"80.283333\"\n  },\n  {\n    \"name\": \"Kolkata\",\n    \"state\": \"West Bengal\",\n    \"lat\": \"22.569722\",\n    \"lon\": \"88.369722\"\n  },\n  {\n    \"name\": \"Surat\",\n    \"state\": \"Gujarat\",\n    \"lat\": \"20.966667\",\n    \"lon\": \"72.9\"\n  },\n  {\n    \"name\": \"Pune\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"18.533333\",\n    \"lon\": \"73.866667\"\n  },\n  {\n    \"name\": \"Jaipur\",\n    \"state\": \"Rajasthan\",\n    \"lat\": \"24.583333\",\n    \"lon\": \"86.85\"\n  },\n  {\n    \"name\": \"Lucknow\",\n    \"state\": \"Uttar Pradesh\",\n    \"lat\": \"26.85\",\n    \"lon\": \"80.916667\"\n  },\n  {\n    \"name\": \"Kanpur\",\n    \"state\": \"Uttar Pradesh\",\n    \"lat\": \"26.466667\",\n    \"lon\": \"80.35\"\n  },\n  {\n    \"name\": \"Nagpur\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"23.3\",\n    \"lon\": \"82.3\"\n  },\n  {\n    \"name\": \"Indore\",\n    \"state\": \"Madhya Pradesh\",\n    \"lat\": \"22.716667\",\n    \"lon\": \"75.833333\"\n  },\n  {\n    \"name\": \"Thane\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"19.2\",\n    \"lon\": \"72.966667\"\n  },\n  {\n    \"name\": \"Bhopal\",\n    \"state\": \"Madhya Pradesh\",\n    \"lat\": \"23.266667\",\n    \"lon\": \"77.4\"\n  },\n  {\n    \"name\": \"Visakhapatnam\",\n    \"state\": \"Andhra Pradesh\",\n    \"lat\": \"17.7\",\n    \"lon\": \"83.3\"\n  },\n  {\n    \"name\": \"Pimpri-Chinchwad\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"18.6279288\",\n    \"lon\": \"73.8009829\"\n  },\n  {\n    \"name\": \"Patna\",\n    \"state\": \"Bihar\",\n    \"lat\": \"23.3\",\n    \"lon\": \"82.666667\"\n  },\n  {\n    \"name\": \"Vadodara\",\n    \"state\": \"Gujarat\",\n    \"lat\": \"22.3\",\n    \"lon\": \"73.2\"\n  },\n  {\n    \"name\": \"Ghaziabad\",\n    \"state\": \"Uttar Pradesh\",\n    \"lat\": \"28.666667\",\n    \"lon\": \"77.433333\"\n  },\n  {\n    \"name\": \"Ludhiana\",\n    \"state\": \"Punjab\",\n    \"lat\": \"30.9\",\n    \"lon\": \"75.85\"\n  },\n  {\n    \"name\": \"Agra\",\n    \"state\": \"Uttar Pradesh\",\n    \"lat\": \"27.183333\",\n    \"lon\": \"78.016667\"\n  },\n  {\n    \"name\": \"Nashik\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"20.0110224\",\n    \"lon\": \"73.7903373\"\n  },\n  {\n    \"name\": \"Faridabad\",\n    \"state\": \"Haryana\",\n    \"lat\": \"28.433333\",\n    \"lon\": \"77.316667\"\n  },\n  {\n    \"name\": \"Meerut\",\n    \"state\": \"Uttar Pradesh\",\n    \"lat\": \"28.983333\",\n    \"lon\": \"77.7\"\n  },\n  {\n    \"name\": \"Rajkot\",\n    \"state\": \"Gujarat\",\n    \"lat\": \"25.731111\",\n    \"lon\": \"75.5925\"\n  },\n  {\n    \"name\": \"Kalyan-Dombivali\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"19.235433\",\n    \"lon\": \"73.129889\"\n  },\n  {\n    \"name\": \"Vasai-Virar\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"19.4258788\",\n    \"lon\": \"72.8224901\"\n  },\n  {\n    \"name\": \"Varanasi\",\n    \"state\": \"Uttar Pradesh\",\n    \"lat\": \"25.333333\",\n    \"lon\": \"83\"\n  },\n  {\n    \"name\": \"Srinagar\",\n    \"state\": \"Jammu and Kashmir\",\n    \"lat\": \"30.216667\",\n    \"lon\": \"78.783333\"\n  },\n  {\n    \"name\": \"Aurangabad\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"26.596\",\n    \"lon\": \"79.9701\"\n  },\n  {\n    \"name\": \"Dhanbad\",\n    \"state\": \"Jharkhand\",\n    \"lat\": \"23.8\",\n    \"lon\": \"86.45\"\n  },\n  {\n    \"name\": \"Amritsar\",\n    \"state\": \"Punjab\",\n    \"lat\": \"31.633056\",\n    \"lon\": \"74.865556\"\n  },\n  {\n    \"name\": \"Navi Mumbai\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"19.033049\",\n    \"lon\": \"73.029662\"\n  },\n  {\n    \"name\": \"Allahabad\",\n    \"state\": \"Uttar Pradesh\",\n    \"lat\": \"25.45\",\n    \"lon\": \"81.85\"\n  },\n  {\n    \"name\": \"Ranchi\",\n    \"state\": \"Jharkhand\",\n    \"lat\": \"23.35\",\n    \"lon\": \"85.333333\"\n  },\n  {\n    \"name\": \"Howrah\",\n    \"state\": \"West Bengal\",\n    \"lat\": \"22.589167\",\n    \"lon\": \"88.310278\"\n  },\n  {\n    \"name\": \"Coimbatore\",\n    \"state\": \"Tamil Nadu\",\n    \"lat\": \"10.9925\",\n    \"lon\": \"76.961389\"\n  },\n  {\n    \"name\": \"Jabalpur\",\n    \"state\": \"Madhya Pradesh\",\n    \"lat\": \"23.166667\",\n    \"lon\": \"79.95\"\n  },\n  {\n    \"name\": \"Gwalior\",\n    \"state\": \"Madhya Pradesh\",\n    \"lat\": \"26.223611\",\n    \"lon\": \"78.179167\"\n  },\n  {\n    \"name\": \"Vijayawada\",\n    \"state\": \"Andhra Pradesh\",\n    \"lat\": \"16.516667\",\n    \"lon\": \"80.616667\"\n  },\n  {\n    \"name\": \"Jodhpur\",\n    \"state\": \"Rajasthan\",\n    \"lat\": \"26.286667\",\n    \"lon\": \"73.03\"\n  },\n  {\n    \"name\": \"Madurai\",\n    \"state\": \"Tamil Nadu\",\n    \"lat\": \"9.933333\",\n    \"lon\": \"78.116667\"\n  },\n  {\n    \"name\": \"Raipur\",\n    \"state\": \"Chhattisgarh\",\n    \"lat\": \"30.316667\",\n    \"lon\": \"78.1\"\n  },\n  {\n    \"name\": \"Kota\",\n    \"state\": \"Rajasthan\",\n    \"lat\": \"29.825278\",\n    \"lon\": \"78.671389\"\n  },\n  {\n    \"name\": \"Guwahati\",\n    \"state\": \"Assam\",\n    \"lat\": \"26.183333\",\n    \"lon\": \"91.733333\"\n  },\n  {\n    \"name\": \"Chandigarh\",\n    \"state\": \"Chandigarh\",\n    \"lat\": \"30.7343\",\n    \"lon\": \"76.7933\"\n  },\n  {\n    \"name\": \"Solapur\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"17.683333\",\n    \"lon\": \"75.916667\"\n  },\n  {\n    \"name\": \"Hubballi-Dharwad\",\n    \"state\": \"Karnataka\",\n    \"lat\": \"15.364708\",\n    \"lon\": \"75.123955\"\n  },\n  {\n    \"name\": \"Bareilly\",\n    \"state\": \"Uttar Pradesh\",\n    \"lat\": \"28.35\",\n    \"lon\": \"79.416667\"\n  },\n  {\n    \"name\": \"Moradabad\",\n    \"state\": \"Uttar Pradesh\",\n    \"lat\": \"28.833333\",\n    \"lon\": \"78.783333\"\n  },\n  {\n    \"name\": \"Mysore\",\n    \"state\": \"Karnataka\",\n    \"lat\": \"12.307222\",\n    \"lon\": \"76.649722\"\n  },\n  {\n    \"name\": \"Gurgaon\",\n    \"state\": \"Haryana\",\n    \"lat\": \"27.6928\",\n    \"lon\": \"79.6766\"\n  },\n  {\n    \"name\": \"Aligarh\",\n    \"state\": \"Uttar Pradesh\",\n    \"lat\": \"27.883333\",\n    \"lon\": \"78.083333\"\n  },\n  {\n    \"name\": \"Jalandhar\",\n    \"state\": \"Punjab\",\n    \"lat\": \"23.9\",\n    \"lon\": \"78.433333\"\n  },\n  {\n    \"name\": \"Tiruchirappalli\",\n    \"state\": \"Tamil Nadu\",\n    \"lat\": \"10.805\",\n    \"lon\": \"78.685556\"\n  },\n  {\n    \"name\": \"Bhubaneswar\",\n    \"state\": \"Orissa\",\n    \"lat\": \"20.233333\",\n    \"lon\": \"85.833333\"\n  },\n  {\n    \"name\": \"Salem\",\n    \"state\": \"Tamil Nadu\",\n    \"lat\": \"15.7\",\n    \"lon\": \"73.916667\"\n  },\n  {\n    \"name\": \"Mira-Bhayandar\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"19.295233\",\n    \"lon\": \"72.854390\"\n  },\n  {\n    \"name\": \"Warangal\",\n    \"state\": \"Telangana\",\n    \"lat\": \"18\",\n    \"lon\": \"79.583333\"\n  },\n  {\n    \"name\": \"Thiruvananthapuram\",\n    \"state\": \"Kerala\",\n    \"lat\": \"8.506944\",\n    \"lon\": \"76.956944\"\n  },\n  {\n    \"name\": \"Guntur\",\n    \"state\": \"Andhra Pradesh\",\n    \"lat\": \"16.3\",\n    \"lon\": \"80.45\"\n  },\n  {\n    \"name\": \"Bhiwandi\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"19.3\",\n    \"lon\": \"73.066667\"\n  },\n  {\n    \"name\": \"Saharanpur\",\n    \"state\": \"Uttar Pradesh\",\n    \"lat\": \"29.966667\",\n    \"lon\": \"77.55\"\n  },\n  {\n    \"name\": \"Gorakhpur\",\n    \"state\": \"Uttar Pradesh\",\n    \"lat\": \"26.755\",\n    \"lon\": \"83.373889\"\n  },\n  {\n    \"name\": \"Bikaner\",\n    \"state\": \"Rajasthan\",\n    \"lat\": \"28.016667\",\n    \"lon\": \"73.3\"\n  },\n  {\n    \"name\": \"Amravati\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"20.933333\",\n    \"lon\": \"77.75\"\n  },\n  {\n    \"name\": \"Noida\",\n    \"state\": \"Uttar Pradesh\",\n    \"lat\": \"28.5726442\",\n    \"lon\": \"77.3547609\"\n  },\n  {\n    \"name\": \"Jamshedpur\",\n    \"state\": \"Jharkhand\",\n    \"lat\": \"22.8\",\n    \"lon\": \"86.183333\"\n  },\n  {\n    \"name\": \"Bhilai\",\n    \"state\": \"Chhattisgarh\",\n    \"lat\": \"21.216667\",\n    \"lon\": \"81.433333\"\n  },\n  {\n    \"name\": \"Cuttack\",\n    \"state\": \"Orissa\",\n    \"lat\": \"20.5\",\n    \"lon\": \"85.833333\"\n  },\n  {\n    \"name\": \"Firozabad\",\n    \"state\": \"Uttar Pradesh\",\n    \"lat\": \"27.15\",\n    \"lon\": \"78.416667\"\n  },\n  {\n    \"name\": \"Kochi\",\n    \"state\": \"Kerala\",\n    \"lat\": \"9.966667\",\n    \"lon\": \"76.233333\"\n  },\n  {\n    \"name\": \"Bhavnagar\",\n    \"state\": \"Gujarat\",\n    \"lat\": \"21.766667\",\n    \"lon\": \"72.15\"\n  },\n  {\n    \"name\": \"Dehradun\",\n    \"state\": \"Uttarakhand\",\n    \"lat\": \"30.3255646\",\n    \"lon\": \"78.0436813\"\n  },\n  {\n    \"name\": \"Durgapur\",\n    \"state\": \"West Bengal\",\n    \"lat\": \"24.75\",\n    \"lon\": \"87.733333\"\n  },\n  {\n    \"name\": \"Asansol\",\n    \"state\": \"West Bengal\",\n    \"lat\": \"24.233333\",\n    \"lon\": \"87.283333\"\n  },\n  {\n    \"name\": \"Nanded\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"19.15\",\n    \"lon\": \"77.333333\"\n  },\n  {\n    \"name\": \"Kolhapur\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"16.7\",\n    \"lon\": \"74.216667\"\n  },\n  {\n    \"name\": \"Ajmer\",\n    \"state\": \"Rajasthan\",\n    \"lat\": \"26.45\",\n    \"lon\": \"74.633333\"\n  },\n  {\n    \"name\": \"Gulbarga\",\n    \"state\": \"Karnataka\",\n    \"lat\": \"17.333333\",\n    \"lon\": \"76.833333\"\n  },\n  {\n    \"name\": \"Jamnagar\",\n    \"state\": \"Gujarat\",\n    \"lat\": \"22.466667\",\n    \"lon\": \"70.066667\"\n  },\n  {\n    \"name\": \"Ujjain\",\n    \"state\": \"Madhya Pradesh\",\n    \"lat\": \"23.183333\",\n    \"lon\": \"75.766667\"\n  },\n  {\n    \"name\": \"Loni\",\n    \"state\": \"Uttar Pradesh\",\n    \"lat\": \"28.75\",\n    \"lon\": \"77.283333\"\n  },\n  {\n    \"name\": \"Siliguri\",\n    \"state\": \"West Bengal\",\n    \"lat\": \"26.716111\",\n    \"lon\": \"88.423611\"\n  },\n  {\n    \"name\": \"Jhansi\",\n    \"state\": \"Uttar Pradesh\",\n    \"lat\": \"25.433333\",\n    \"lon\": \"78.583333\"\n  },\n  {\n    \"name\": \"Ulhasnagar\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"19.216667\",\n    \"lon\": \"73.15\"\n  },\n  {\n    \"name\": \"Nellore\",\n    \"state\": \"Andhra Pradesh\",\n    \"lat\": \"14.433333\",\n    \"lon\": \"79.966667\"\n  },\n  {\n    \"name\": \"Jammu\",\n    \"state\": \"Jammu and Kashmir\",\n    \"lat\": \"32.733333\",\n    \"lon\": \"74.866667\"\n  },\n  {\n    \"name\": \"Sangli-Miraj & Kupwad\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"16.860446\",\n    \"lon\": \"74.565518\"\n  },\n  {\n    \"name\": \"Belgaum\",\n    \"state\": \"Karnataka\",\n    \"lat\": \"15.866667\",\n    \"lon\": \"74.5\"\n  },\n  {\n    \"name\": \"Mangalore\",\n    \"state\": \"Karnataka\",\n    \"lat\": \"12.863889\",\n    \"lon\": \"74.835278\"\n  },\n  {\n    \"name\": \"Ambattur\",\n    \"state\": \"Tamil Nadu\",\n    \"lat\": \"13.076667\",\n    \"lon\": \"80.088611\"\n  },\n  {\n    \"name\": \"Tirunelveli\",\n    \"state\": \"Tamil Nadu\",\n    \"lat\": \"8.733333\",\n    \"lon\": \"77.7\"\n  },\n  {\n    \"name\": \"Malegaon\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"20.55\",\n    \"lon\": \"74.533333\"\n  },\n  {\n    \"name\": \"Gaya\",\n    \"state\": \"Bihar\",\n    \"lat\": \"24.783333\",\n    \"lon\": \"85\"\n  },\n  {\n    \"name\": \"Jalgaon\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"21.048611\",\n    \"lon\": \"76.534444\"\n  },\n  {\n    \"name\": \"Udaipur\",\n    \"state\": \"Rajasthan\",\n    \"lat\": \"26.6978\",\n    \"lon\": \"79.9216\"\n  },\n  {\n    \"name\": \"Maheshtala\",\n    \"state\": \"West Bengal\",\n    \"lat\": \"22.508621\",\n    \"lon\": \"88.2532182\"\n  },\n  {\n    \"name\": \"Tirupur\",\n    \"state\": \"Tamil Nadu\",\n    \"lat\": \"11.1\",\n    \"lon\": \"77.35\"\n  },\n  {\n    \"name\": \"Davanagere\",\n    \"state\": \"Karnataka\",\n    \"lat\": \"14.4596984\",\n    \"lon\": \"75.9289654951128\"\n  },\n  {\n    \"name\": \"Kozhikode\",\n    \"state\": \"Kerala\",\n    \"lat\": \"11.25\",\n    \"lon\": \"75.766667\"\n  },\n  {\n    \"name\": \"Akola\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"24.766667\",\n    \"lon\": \"74.2\"\n  },\n  {\n    \"name\": \"Kurnool\",\n    \"state\": \"Andhra Pradesh\",\n    \"lat\": \"15.833333\",\n    \"lon\": \"78.05\"\n  },\n  {\n    \"name\": \"Rajpur Sonarpur\",\n    \"state\": \"West Bengal\",\n    \"lat\": \"22.449089\",\n    \"lon\": \"88.391473\"\n  },\n  {\n    \"name\": \"Bokaro\",\n    \"state\": \"Jharkhand\",\n    \"lat\": \"23.783333\",\n    \"lon\": \"85.966667\"\n  },\n  {\n    \"name\": \"South Dumdum\",\n    \"state\": \"West Bengal\",\n    \"lat\": \"22.610000\",\n    \"lon\": \"88.400000\"\n  },\n  {\n    \"name\": \"Bellary\",\n    \"state\": \"Karnataka\",\n    \"lat\": \"15.15\",\n    \"lon\": \"76.933333\"\n  },\n  {\n    \"name\": \"Patiala\",\n    \"state\": \"Punjab\",\n    \"lat\": \"30.326667\",\n    \"lon\": \"76.400278\"\n  },\n  {\n    \"name\": \"Gopalpur\",\n    \"state\": \"West Bengal\",\n    \"lat\": \"24.833333\",\n    \"lon\": \"87.8\"\n  },\n  {\n    \"name\": \"Agartala\",\n    \"state\": \"Tripura\",\n    \"lat\": \"23.836389\",\n    \"lon\": \"91.275\"\n  },\n  {\n    \"name\": \"Bhagalpur\",\n    \"state\": \"Bihar\",\n    \"lat\": \"26.169722\",\n    \"lon\": \"83.872778\"\n  },\n  {\n    \"name\": \"Muzaffarnagar\",\n    \"state\": \"Uttar Pradesh\",\n    \"lat\": \"29.466667\",\n    \"lon\": \"77.683333\"\n  },\n  {\n    \"name\": \"Bhatpara\",\n    \"state\": \"West Bengal\",\n    \"lat\": \"22.871389\",\n    \"lon\": \"88.408889\"\n  },\n  {\n    \"name\": \"Panihati\",\n    \"state\": \"West Bengal\",\n    \"lat\": \"22.694167\",\n    \"lon\": \"88.374444\"\n  },\n  {\n    \"name\": \"Latur\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"18.4\",\n    \"lon\": \"76.583333\"\n  },\n  {\n    \"name\": \"Dhule\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"20.9\",\n    \"lon\": \"74.783333\"\n  },\n  {\n    \"name\": \"Rohtak\",\n    \"state\": \"Haryana\",\n    \"lat\": \"28.9\",\n    \"lon\": \"76.566667\"\n  },\n  {\n    \"name\": \"Korba\",\n    \"state\": \"Chhattisgarh\",\n    \"lat\": \"22.35\",\n    \"lon\": \"82.683333\"\n  },\n  {\n    \"name\": \"Bhilwara\",\n    \"state\": \"Rajasthan\",\n    \"lat\": \"25.35\",\n    \"lon\": \"74.633333\"\n  },\n  {\n    \"name\": \"Brahmapur\",\n    \"state\": \"Orissa\",\n    \"lat\": \"19.316667\",\n    \"lon\": \"84.783333\"\n  },\n  {\n    \"name\": \"Muzaffarpur\",\n    \"state\": \"Bihar\",\n    \"lat\": \"26.116667\",\n    \"lon\": \"85.4\"\n  },\n  {\n    \"name\": \"Ahmednagar\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"19.083333\",\n    \"lon\": \"74.733333\"\n  },\n  {\n    \"name\": \"Mathura\",\n    \"state\": \"Uttar Pradesh\",\n    \"lat\": \"27.5\",\n    \"lon\": \"77.683333\"\n  },\n  {\n    \"name\": \"Kollam\",\n    \"state\": \"Kerala\",\n    \"lat\": \"8.880556\",\n    \"lon\": \"76.591667\"\n  },\n  {\n    \"name\": \"Avadi\",\n    \"state\": \"Tamil Nadu\",\n    \"lat\": \"13.115556\",\n    \"lon\": \"80.101667\"\n  },\n  {\n    \"name\": \"Rajahmundry\",\n    \"state\": \"Andhra Pradesh\",\n    \"lat\": \"16.983333\",\n    \"lon\": \"81.783333\"\n  },\n  {\n    \"name\": \"Kadapa\",\n    \"state\": \"Andhra Pradesh\",\n    \"lat\": \"14.466667\",\n    \"lon\": \"78.816667\"\n  },\n  {\n    \"name\": \"Kamarhati\",\n    \"state\": \"West Bengal\",\n    \"lat\": \"22.671111\",\n    \"lon\": \"88.374722\"\n  },\n  {\n    \"name\": \"Bilaspur\",\n    \"state\": \"Chhattisgarh\",\n    \"lat\": \"22.083333\",\n    \"lon\": \"82.15\"\n  },\n  {\n    \"name\": \"Shahjahanpur\",\n    \"state\": \"Uttar Pradesh\",\n    \"lat\": \"27.883333\",\n    \"lon\": \"79.916667\"\n  },\n  {\n    \"name\": \"Bijapur\",\n    \"state\": \"Karnataka\",\n    \"lat\": \"18.8\",\n    \"lon\": \"80.816667\"\n  },\n  {\n    \"name\": \"Rampur\",\n    \"state\": \"Uttar Pradesh\",\n    \"lat\": \"23.283333\",\n    \"lon\": \"85.433333\"\n  },\n  {\n    \"name\": \"Shivamogga (Shimoga)\",\n    \"state\": \"Karnataka\",\n    \"lat\": \"13.929930\",\n    \"lon\": \"75.568101\"\n  },\n  {\n    \"name\": \"Chandrapur\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"19.6\",\n    \"lon\": \"83.883333\"\n  },\n  {\n    \"name\": \"Junagadh\",\n    \"state\": \"Gujarat\",\n    \"lat\": \"21.516667\",\n    \"lon\": \"70.466667\"\n  },\n  {\n    \"name\": \"Thrissur\",\n    \"state\": \"Kerala\",\n    \"lat\": \"10.516667\",\n    \"lon\": \"76.216667\"\n  },\n  {\n    \"name\": \"Alwar\",\n    \"state\": \"Rajasthan\",\n    \"lat\": \"27.566667\",\n    \"lon\": \"76.6\"\n  },\n  {\n    \"name\": \"Bardhaman\",\n    \"state\": \"West Bengal\",\n    \"lat\": \"23.240556\",\n    \"lon\": \"87.869444\"\n  },\n  {\n    \"name\": \"Kulti\",\n    \"state\": \"West Bengal\",\n    \"lat\": \"23.733333\",\n    \"lon\": \"86.85\"\n  },\n  {\n    \"name\": \"Kakinada\",\n    \"state\": \"Andhra Pradesh\",\n    \"lat\": \"16.933333\",\n    \"lon\": \"82.216667\"\n  },\n  {\n    \"name\": \"Nizamabad\",\n    \"state\": \"Telangana\",\n    \"lat\": \"26.050556\",\n    \"lon\": \"83.058889\"\n  },\n  {\n    \"name\": \"Parbhani\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"19.266667\",\n    \"lon\": \"76.783333\"\n  },\n  {\n    \"name\": \"Tumkur\",\n    \"state\": \"Karnataka\",\n    \"lat\": \"13.342222\",\n    \"lon\": \"77.101667\"\n  },\n  {\n    \"name\": \"Hisar\",\n    \"state\": \"Haryana\",\n    \"lat\": \"29.166667\",\n    \"lon\": \"75.716667\"\n  },\n  {\n    \"name\": \"Ozhukarai\",\n    \"state\": \"Puducherry\",\n    \"lat\": \"11.948880\",\n    \"lon\": \"79.712141\"\n  },\n  {\n    \"name\": \"Bihar Sharif\",\n    \"state\": \"Bihar\",\n    \"lat\": \"25.183333\",\n    \"lon\": \"85.516667\"\n  },\n  {\n    \"name\": \"Panipat\",\n    \"state\": \"Haryana\",\n    \"lat\": \"29.388889\",\n    \"lon\": \"76.968056\"\n  },\n  {\n    \"name\": \"Darbhanga\",\n    \"state\": \"Bihar\",\n    \"lat\": \"26.166667\",\n    \"lon\": \"85.9\"\n  },\n  {\n    \"name\": \"Bally\",\n    \"state\": \"West Bengal\",\n    \"lat\": \"15.166667\",\n    \"lon\": \"74.033333\"\n  },\n  {\n    \"name\": \"Aizawl\",\n    \"state\": \"Mizoram\",\n    \"lat\": \"23.724444\",\n    \"lon\": \"92.7175\"\n  },\n  {\n    \"name\": \"Dewas\",\n    \"state\": \"Madhya Pradesh\",\n    \"lat\": \"22.966667\",\n    \"lon\": \"76.066667\"\n  },\n  {\n    \"name\": \"Ichalkaranji\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"16.7\",\n    \"lon\": \"74.466667\"\n  },\n  {\n    \"name\": \"Tirupati\",\n    \"state\": \"Andhra Pradesh\",\n    \"lat\": \"13.65\",\n    \"lon\": \"79.416667\"\n  },\n  {\n    \"name\": \"Karnal\",\n    \"state\": \"Haryana\",\n    \"lat\": \"29.683333\",\n    \"lon\": \"76.983333\"\n  },\n  {\n    \"name\": \"Bathinda\",\n    \"state\": \"Punjab\",\n    \"lat\": \"30.2081076\",\n    \"lon\": \"74.9485371\"\n  },\n  {\n    \"name\": \"Jalna\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"24.0988\",\n    \"lon\": \"79.2137\"\n  },\n  {\n    \"name\": \"Barasat\",\n    \"state\": \"West Bengal\",\n    \"lat\": \"22.684167\",\n    \"lon\": \"88.441111\"\n  },\n  {\n    \"name\": \"Kirari Suleman Nagar\",\n    \"state\": \"Delhi\",\n    \"lat\": \"28.701638\",\n    \"lon\": \"77.047811\"\n  },\n  {\n    \"name\": \"Purnia\",\n    \"state\": \"Bihar\",\n    \"lat\": \"24.516667\",\n    \"lon\": \"87.133333\"\n  },\n  {\n    \"name\": \"Satna\",\n    \"state\": \"Madhya Pradesh\",\n    \"lat\": \"24.583333\",\n    \"lon\": \"80.833333\"\n  },\n  {\n    \"name\": \"Mau\",\n    \"state\": \"Uttar Pradesh\",\n    \"lat\": \"25.941667\",\n    \"lon\": \"83.561111\"\n  },\n  {\n    \"name\": \"Sonipat\",\n    \"state\": \"Haryana\",\n    \"lat\": \"28.983333\",\n    \"lon\": \"77.016667\"\n  },\n  {\n    \"name\": \"Farrukhabad\",\n    \"state\": \"Uttar Pradesh\",\n    \"lat\": \"27.4\",\n    \"lon\": \"79.566667\"\n  },\n  {\n    \"name\": \"Sagar\",\n    \"state\": \"Madhya Pradesh\",\n    \"lat\": \"22.066667\",\n    \"lon\": \"82\"\n  },\n  {\n    \"name\": \"Rourkela\",\n    \"state\": \"Orissa\",\n    \"lat\": \"22.2\",\n    \"lon\": \"84.883333\"\n  },\n  {\n    \"name\": \"Durg\",\n    \"state\": \"Chhattisgarh\",\n    \"lat\": \"21.183333\",\n    \"lon\": \"81.283333\"\n  },\n  {\n    \"name\": \"Imphal\",\n    \"state\": \"Manipur\",\n    \"lat\": \"24.816667\",\n    \"lon\": \"93.95\"\n  },\n  {\n    \"name\": \"Ratlam\",\n    \"state\": \"Madhya Pradesh\",\n    \"lat\": \"23.316667\",\n    \"lon\": \"75.066667\"\n  },\n  {\n    \"name\": \"Hapur\",\n    \"state\": \"Uttar Pradesh\",\n    \"lat\": \"28.716667\",\n    \"lon\": \"77.783333\"\n  },\n  {\n    \"name\": \"Anantapur\",\n    \"state\": \"Andhra Pradesh\",\n    \"lat\": \"26.829\",\n    \"lon\": \"79.5342\"\n  },\n  {\n    \"name\": \"Arrah\",\n    \"state\": \"Bihar\",\n    \"lat\": \"25.566667\",\n    \"lon\": \"84.666667\"\n  },\n  {\n    \"name\": \"Karimnagar\",\n    \"state\": \"Telangana\",\n    \"lat\": \"27.7974\",\n    \"lon\": \"79.2581\"\n  },\n  {\n    \"name\": \"Etawah\",\n    \"state\": \"Uttar Pradesh\",\n    \"lat\": \"26.7769\",\n    \"lon\": \"79.0239\"\n  },\n  {\n    \"name\": \"Ambernath\",\n    \"state\": \"Maharashtra\",\n    \"lat\": \"19.2015607\",\n    \"lon\": \"73.2004771\"\n  },\n  {\n    \"name\": \"North Dumdum\",\n    \"state\": \"West Bengal\",\n    \"lat\": \"22.652080\",\n    \"lon\": \"88.419070\"\n  },\n  {\n    \"name\": \"Bharatpur\",\n    \"state\": \"Rajasthan\",\n    \"lat\": \"27.1268\",\n    \"lon\": \"79.3921\"\n  },\n  {\n    \"name\": \"Begusarai\",\n    \"state\": \"Bihar\",\n    \"lat\": \"25.416667\",\n    \"lon\": \"86.133333\"\n  },\n  {\n    \"name\": \"New Delhi\",\n    \"state\": \"Delhi\",\n    \"lat\": \"28.6\",\n    \"lon\": \"77.2\"\n  },\n  {\n    \"name\": \"Gandhidham\",\n    \"state\": \"Gujarat\",\n    \"lat\": \"23.083333\",\n    \"lon\": \"70.133333\"\n  },\n  {\n    \"name\": \"Baranagar\",\n    \"state\": \"West Bengal\",\n    \"lat\": \"22.643333\",\n    \"lon\": \"88.365278\"\n  },\n  {\n    \"name\": \"Tiruvottiyur\",\n    \"state\": \"Tamil Nadu\",\n    \"lat\": \"13.157778\",\n    \"lon\": \"80.304167\"\n  },\n  {\n    \"name\": \"Puducherry\",\n    \"state\": \"Puducherry\",\n    \"lat\": \"11.93\",\n    \"lon\": \"79.83\"\n  },\n  {\n    \"name\": \"Sikar\",\n    \"state\": \"Rajasthan\",\n    \"lat\": \"27.616667\",\n    \"lon\": \"75.15\"\n  },\n  {\n    \"name\": \"Thoothukudi\",\n    \"state\": \"Tamil Nadu\",\n    \"lat\": \"8.783333\",\n    \"lon\": \"78.133333\"\n  },\n  {\n    \"name\": \"Rewa\",\n    \"state\": \"Madhya Pradesh\",\n    \"lat\": \"27.9161\",\n    \"lon\": \"79.0231\"\n  },\n  {\n    \"name\": \"Mirzapur\",\n    \"state\": \"Uttar Pradesh\",\n    \"lat\": \"25.15\",\n    \"lon\": \"82.583333\"\n  },\n  {\n    \"name\": \"Raichur\",\n    \"state\": \"Karnataka\",\n    \"lat\": \"16.2\",\n    \"lon\": \"77.366667\"\n  },\n  {\n    \"name\": \"Pali\",\n    \"state\": \"Rajasthan\",\n    \"lat\": \"29.85\",\n    \"lon\": \"78.543889\"\n  },\n  {\n    \"name\": \"Khammam\",\n    \"state\": \"Telangana\",\n    \"lat\": \"17.25\",\n    \"lon\": \"80.15\"\n  },\n  {\n    \"name\": \"Vizianagaram\",\n    \"state\": \"Andhra Pradesh\",\n    \"lat\": \"18.116667\",\n    \"lon\": \"83.416667\"\n  },\n  {\n    \"name\": \"Katihar\",\n    \"state\": \"Bihar\",\n    \"lat\": \"25.533333\",\n    \"lon\": \"87.583333\"\n  },\n  {\n    \"name\": \"Haridwar\",\n    \"state\": \"Uttarakhand\",\n    \"lat\": \"29.966667\",\n    \"lon\": \"78.166667\"\n  },\n  {\n    \"name\": \"Sri Ganganagar\",\n    \"state\": \"Rajasthan\",\n    \"lat\": \"29.916667\",\n    \"lon\": \"73.883333\"\n  },\n  {\n    \"name\": \"Karawal Nagar\",\n    \"state\": \"Delhi\",\n    \"lat\": \"28.728310\",\n    \"lon\": \"77.276926\"\n  },\n  {\n    \"name\": \"Nagercoil\",\n    \"state\": \"Tamil Nadu\",\n    \"lat\": \"8.193889\",\n    \"lon\": \"77.431389\"\n  },\n  {\n    \"name\": \"Mango\",\n    \"state\": \"Jharkhand\",\n    \"lat\": \"13.22526165\",\n    \"lon\": \"79.1055442299247\"\n  },\n  {\n    \"name\": \"Bulandshahr\",\n    \"state\": \"Uttar Pradesh\",\n    \"lat\": \"28.4\",\n    \"lon\": \"77.85\"\n  },\n  {\n    \"name\": \"Thanjavur\",\n    \"state\": \"Tamil Nadu\",\n    \"lat\": \"10.8\",\n    \"lon\": \"79.15\"\n  }\n]`;","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n\n`;\n\nexport const ChartContainer = styled.div`\n  width: 100%;\n  height: 200px;\n`;\n\nexport const StatsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Stat = styled.div`\n    display: flex;\n    flex-direction: column;\n`;","import React from \"react\";\nimport {\n  AreaChart, Area, XAxis, CartesianGrid, Tooltip, ResponsiveContainer,\n} from \"recharts\";\nimport Text from \"../Text\";\nimport moment from \"moment\";\nimport { Container, ChartContainer, StatsContainer, Stat } from \"./styles\";\n\nconst data = [\n  { \"name\": \"5am\", \"value\": 0 },\n  { \"name\": \"\", \"value\": 0 },\n  { \"name\": \"2am\", \"value\": 1 },\n  { \"name\": \"\", \"value\": 0 },\n  { \"name\": \"6pm\", \"value\": 0 }\n];\n\nconst SunriseChart = ({ sunrise, sunset }) => {\n  return (\n    <Container>\n      <StatsContainer>\n        <Stat>\n          <Text bold>Sunrise</Text>\n          <Text faded>{moment(sunrise * 1000).format('h:ma')}</Text>\n        </Stat>\n        <Stat>\n          <Text bold>Sunset</Text>\n          <Text faded>{moment(sunset * 1000).format('h:ma')}</Text>\n        </Stat>\n      </StatsContainer>\n      <ChartContainer>\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <AreaChart\n            margin={{ right: 10, left: 18 }}\n            layout=\"horizontal\"\n            stackOffset=\"none\"\n            barCategoryGap=\"10%\"\n            barGap={4}\n            reverseStackOrder={false}\n            data={data}\n          >\n            <defs>\n              <linearGradient id=\"time\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"#F7E0AF\" stopOpacity=\"0.6\"></stop>\n                <stop offset=\"90%\" stopColor=\"#F7E0AF\" stopOpacity=\"0.1\"></stop>\n              </linearGradient>\n            </defs>\n            <XAxis\n              dataKey=\"name\"\n              tickLine={false}\n              domain={[0, 1, 2, 3, 4]}\n              duplicateDomain={[\"5am\", \"\", \"2am\", \"\", \"6pm\"]}\n              stroke=\"#666\"\n            />\n            <Area\n              type=\"basisClosed\"\n              dataKey=\"value\"\n              fill=\"url(#time)\"\n              fillOpacity={0.6}\n              legendType=\"line\"\n              dot={false}\n              stroke=\"#FEDB41\"\n              height={170}\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      </ChartContainer>\n    </Container>\n  );\n}\n\nexport default SunriseChart;","import styled from \"styled-components\";\n\nexport const ChartContainer = styled.div`\n  overflow: scroll;\n  margin-bottom: 2rem;\n`;","import React from \"react\";\nimport moment from \"moment\";\nimport {\n  AreaChart, Area, XAxis, CartesianGrid, Tooltip,\n} from \"recharts\";\nimport { getCelsius, getHourlyData } from \"../../utils\";\nimport { ChartContainer } from \"./styles\";\n\nconst TemperatureChart = ({ hourly, selectedDay }) => {\n  const now = moment();\n  console.log(getHourlyData(hourly, selectedDay).map((h, i) => ({\n    temp: getCelsius(h.temp),\n    hour: moment(h.hour * 1000).format('ha')\n  })));\n  return (\n    <ChartContainer>\n      <AreaChart\n        width={1400}\n        height={250}\n        margin={{ top: 10, right: 30, left: 10, bottom: 0 }}\n        layout=\"horizontal\"\n        stackOffset=\"none\"\n        barCategoryGap=\"10%\"\n        barGap={4}\n        reverseStackOrder={false}\n        data={getHourlyData(hourly, selectedDay).map((h, i) => ({\n          temp: getCelsius(h.temp),\n          hour: moment(h.hour * 1000).format('ha')\n        }))}\n      >\n        <defs>\n          <linearGradient id=\"temp\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"5%\" stopColor=\"#00a6fa\" stopOpacity=\"0.6\"></stop>\n            <stop offset=\"50%\" stopColor=\"#00a6fa\" stopOpacity=\"0\"></stop>\n          </linearGradient>\n        </defs>\n        <CartesianGrid stroke=\"#ccc\"\n          strokeOpacity={0.4}\n          strokeWidth={3}\n          vertical={true}\n          horizontal={false}\n          width={1360}\n          height={210}\n        />\n        <XAxis dataKey=\"hour\" tickLine={false} axisLine={false} />\n        <Area\n          type=\"monotone\"\n          dataKey=\"temp\"\n          fill=\"url(#temp)\"\n          fillOpacity={1}\n          legendType=\"line\"\n          dot={{ \"fill\": \"white\", \"r\": 5, \"stroke\": \"#00a6fa\", \"strokeWidth\": 2 }}\n          stroke=\"#00a6fa\"\n          strokeWidth={2}\n          isAnimationActive={true}\n        />\n        <Tooltip />\n      </AreaChart>\n    </ChartContainer>\n  );\n}\n\nexport default TemperatureChart;","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  margin-bottom: 3rem;\n`;\n\nexport const Stat = styled.div`\n    background: var(--primary-light);\n    flex-grow: 1;\n    display: flex;\n    flex-direction: column;\n    padding: 1rem .75rem;\n    margin-right: 0.5em;\n    \n    &:last-child {\n      margin-right: 0;\n    }\n`;\n","import React from \"react\";\nimport { Container, Stat } from \"./styles\";\nimport Text from \"../Text\";\n\nconst WheatherStats = ({ pressure, humidity }) => {\n  return (\n    <Container>\n      <Stat>\n        <Text bold>Pressure</Text>\n        <Text>{pressure} hpa</Text>\n      </Stat>\n      <Stat>\n        <Text bold>Humidity</Text>\n        <Text>{humidity} %</Text>\n      </Stat>\n    </Container>\n  )\n};\n\nexport default WheatherStats;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  border-radius: 8px;\n  box-shadow: var(--shadow);\n  padding: 1.5rem 1rem 0;\n`;\nexport const Header = styled.div`\n  margin-bottom: 1.5rem;\n  span {\n    font-size: 3rem;\n    font-weight: 900;\n    margin: 0;\n  }\n`;\nexport const Icon = styled.img`\n  height: 3em;\n  margin-left: 1rem;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { getLocations, getWeather } from \"../../services\";\nimport { getCelsius, getImageName } from \"../../utils\";\nimport SunriseChart from \"../SunriseChart\";\nimport TemperatureChart from \"../TemperatureChart\";\nimport Text from \"../Text\";\nimport WheatherStats from \"../WeatherStats\";\nimport { Container, Header, Icon } from \"./styles\";\n\nconst WeatherCard = ({ current, hourly, selectedDay }) => {\n  return (\n    <Container>\n      <Header>\n        <Text>{getCelsius(current.temp.max)}°C</Text>\n        <Icon src={`/images/${getImageName(current.weather[0].main)}`} />\n      </Header>\n      <TemperatureChart hourly={hourly} selectedDay={selectedDay} />\n      <WheatherStats pressure={current.pressure} humidity={current.humidity} />\n      <SunriseChart sunrise={current.sunrise} sunset={current.sunset} />\n    </Container>\n  )\n}\n\nexport default WeatherCard;\n","import React, { useContext, useEffect } from 'react';\nimport { Container, Loader } from './styles';\nimport Autocomplete from '../../components/Autocomplete';\nimport ForcastList from '../../components/ForcastList';\nimport WeatherCard from '../../components/WeatherCard';\nimport { getWeather, getLocations, getWeatherShort, locationsArray } from '../../services';\nimport { WEATHER_LOCATION_QUERY, WEATHER_LOCATION_FETCHING, WEATHER_LOCATION_SUCCESS, WEATHER_LOCATION_SELECTED, WEATHER_LOCATION_WEATHER_SUCCESS, WEATHER_LOCATION_WEATHER_FETCHING, WEATHER_SUCCESS, WEATHER_DAY_SELECTED } from '../../store/actions';\nimport { storeContext } from '../../store';\nimport { debounce } from '../../utils';\n\nconst WeatherScreen = () => {\n  const { store, dispatch } = useContext(storeContext);\n\n  const onSearchClick = (item) => {\n    dispatch({ type: WEATHER_LOCATION_SELECTED, payload: item });\n    getWeather(item).then(resp => {\n      dispatch({\n        type: WEATHER_SUCCESS, payload: {\n          hourly: resp.data.hourly,\n          daily: resp.data.daily\n        }\n      });\n    });\n  }\n\n  const onSearch = debounce((e) => {\n    const query = e.target.value;\n    if (query.trim().length && query !== store.locations.query) {\n      dispatch({ type: WEATHER_LOCATION_FETCHING });\n      const results = getLocations(query);\n      dispatch({ type: WEATHER_LOCATION_SUCCESS, payload: { results, query } });\n      dispatch({ type: WEATHER_LOCATION_WEATHER_FETCHING });\n      Promise\n        .all(results.map(r => getWeatherShort(r).then(resp => ({ ...resp.data, locationName: r.name }))))\n        .then(resp => {\n          dispatch({ type: WEATHER_LOCATION_WEATHER_SUCCESS, payload: resp });\n        });\n    } else {\n      dispatch({ type: WEATHER_LOCATION_SUCCESS, payload: { results: [], query } });\n    }\n  }, 500);\n\n  const onChange = (e) => {\n    dispatch({ type: WEATHER_LOCATION_QUERY, payload: e.target.value });\n    onSearch(e);\n  }\n\n  const onForcastClick = (e) => {\n    dispatch({ type: WEATHER_DAY_SELECTED, payload: Number(e.target.value) });\n  }\n\n  useEffect(() => {\n    onSearchClick(locationsArray[0]);\n  }, [])\n\n  return (\n    <Container>\n      <Autocomplete onChange={onChange} locations={store.locations} onClick={onSearchClick} />\n      {\n        !store.weather.fetching\n          ? (\n            <React.Fragment>\n              <ForcastList daily={store.weather.daily} onClick={onForcastClick} selectedDay={store.selectedDay} />\n              <WeatherCard current={store.weather.daily[store.selectedDay]} hourly={store.weather.hourly} selectedDay={store.selectedDay} />\n            </React.Fragment>\n          )\n          : <Loader>Loading...</Loader>\n      }\n    </Container>\n  );\n}\n\nexport default WeatherScreen;","import { StoreProvider } from \"../../store\";\nimport WeatherScreen from \"../WeatherScreen\";\n\nconst App = () => (\n  <StoreProvider>\n    <WeatherScreen />\n  </StoreProvider>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}