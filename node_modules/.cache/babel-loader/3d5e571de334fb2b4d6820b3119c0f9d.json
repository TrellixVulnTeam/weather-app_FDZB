{"ast":null,"code":"import locations from \"../data/locations\";\nimport axios from \"axios\";\nexport const locationsArray = JSON.parse(locations);\nexport const getLocations = query => {\n  return locationsArray.filter(l => l.name.toLowerCase().includes(query.toLowerCase()));\n};\nexport const getWeatherShort = async loc => {\n  return axios.get('http://api.openweathermap.org/data/2.5/weather', {\n    params: {\n      lat: loc.lat,\n      lon: loc.lon,\n      appid: '6cc6ac631730d728804ec2ccecb4f575'\n    }\n  });\n};\nexport const getWeather = async loc => {\n  return axios.get('http://api.openweathermap.org/data/2.5/onecall', {\n    params: {\n      lat: loc.lat,\n      lon: loc.lon,\n      cnt: 20,\n      appid: '6cc6ac631730d728804ec2ccecb4f575'\n    }\n  });\n};","map":{"version":3,"sources":["/Users/ankitsrivastava/Desktop/react/richpanel-weather-app/src/services/index.js"],"names":["locations","axios","locationsArray","JSON","parse","getLocations","query","filter","l","name","toLowerCase","includes","getWeatherShort","loc","get","params","lat","lon","appid","getWeather","cnt"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,mBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAvB;AAEP,OAAO,MAAMK,YAAY,GAAIC,KAAD,IAAW;AACrC,SAAOJ,cAAc,CAACK,MAAf,CAAsBC,CAAC,IAAIA,CAAC,CAACC,IAAF,CAAOC,WAAP,GAAqBC,QAArB,CAA8BL,KAAK,CAACI,WAAN,EAA9B,CAA3B,CAAP;AACD,CAFM;AAIP,OAAO,MAAME,eAAe,GAAG,MAAOC,GAAP,IAAe;AAC5C,SAAOZ,KAAK,CAACa,GAAN,CAAU,gDAAV,EAA4D;AACjEC,IAAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,EAAEH,GAAG,CAACG,GADH;AAENC,MAAAA,GAAG,EAAEJ,GAAG,CAACI,GAFH;AAGNC,MAAAA,KAAK,EAAE;AAHD;AADyD,GAA5D,CAAP;AAOD,CARM;AAUP,OAAO,MAAMC,UAAU,GAAG,MAAON,GAAP,IAAe;AACvC,SAAOZ,KAAK,CAACa,GAAN,CAAU,gDAAV,EAA4D;AACjEC,IAAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,EAAEH,GAAG,CAACG,GADH;AAENC,MAAAA,GAAG,EAAEJ,GAAG,CAACI,GAFH;AAGNG,MAAAA,GAAG,EAAE,EAHC;AAINF,MAAAA,KAAK,EAAE;AAJD;AADyD,GAA5D,CAAP;AAQD,CATM","sourcesContent":["import locations from \"../data/locations\";\nimport axios from \"axios\";\n\nexport const locationsArray = JSON.parse(locations);\n\nexport const getLocations = (query) => {\n  return locationsArray.filter(l => l.name.toLowerCase().includes(query.toLowerCase()));\n}\n\nexport const getWeatherShort = async (loc) => {\n  return axios.get('http://api.openweathermap.org/data/2.5/weather', {\n    params: {\n      lat: loc.lat,\n      lon: loc.lon,\n      appid: '6cc6ac631730d728804ec2ccecb4f575'\n    }\n  });\n}\n\nexport const getWeather = async (loc) => {\n  return axios.get('http://api.openweathermap.org/data/2.5/onecall', {\n    params: {\n      lat: loc.lat,\n      lon: loc.lon,\n      cnt: 20,\n      appid: '6cc6ac631730d728804ec2ccecb4f575'\n    }\n  });\n}"]},"metadata":{},"sourceType":"module"}