{"ast":null,"code":"import _toConsumableArray from\"/Users/ankitsrivastava/Desktop/react/richpanel-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/ankitsrivastava/Desktop/react/richpanel-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{WEATHER_DAY_SELECTED,WEATHER_LOCATION_QUERY,WEATHER_ERROR,WEATHER_FETCHING,WEATHER_LOCATION_SELECTED,WEATHER_LOCATION_WEATHER_SUCCESS,WEATHER_LOCATION_FETCHING,WEATHER_LOCATION_SUCCESS,WEATHER_SUCCESS,WEATHER_LOCATION_WEATHER_FETCHING}from'./actions';export var initialState={locations:{fetching:false,query:'',weathers:[],results:[]},selectedDay:0,weather:{fetching:true,error:true,hourly:[],daily:[]}};export var storeReducer=function storeReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case WEATHER_LOCATION_QUERY:return _objectSpread(_objectSpread({},state),{},{locations:_objectSpread(_objectSpread({},state.locations),{},{query:action.payload})});case WEATHER_LOCATION_FETCHING:return _objectSpread(_objectSpread({},state),{},{locations:_objectSpread(_objectSpread({},state.locations),{},{fetching:true,results:[],weathers:[]})});case WEATHER_LOCATION_SUCCESS:return _objectSpread(_objectSpread({},state),{},{locations:_objectSpread(_objectSpread({},state.locations),{},{fetching:false},action.payload)});case WEATHER_LOCATION_SELECTED:return _objectSpread(_objectSpread({},state),{},{locations:_objectSpread(_objectSpread({},state.locations),{},{query:\"\".concat(action.payload.name,\", \").concat(action.payload.state),results:[],weathers:[]})});case WEATHER_LOCATION_WEATHER_FETCHING:return _objectSpread(_objectSpread({},state),{},{locations:_objectSpread(_objectSpread({},state.locations),{},{fetching:true,weathers:[]})});case WEATHER_LOCATION_WEATHER_SUCCESS:return _objectSpread(_objectSpread({},state),{},{locations:_objectSpread(_objectSpread({},state.locations),{},{weathers:[].concat(_toConsumableArray(state.locations.weathers),_toConsumableArray(action.payload))})});case WEATHER_FETCHING:return _objectSpread(_objectSpread({},state),{},{weather:_objectSpread(_objectSpread({},state.weather),{},{fetching:true,selectedDay:0,hourly:[],daily:[]})});case WEATHER_SUCCESS:return _objectSpread(_objectSpread({},state),{},{weather:_objectSpread(_objectSpread({},state.weather),{},{fetching:false,hourly:action.payload.hourly,daily:action.payload.daily})});case WEATHER_ERROR:return _objectSpread(_objectSpread({},state),{},{weather:_objectSpread(_objectSpread({},state.weather),{},{fetching:false,error:true,hourly:[],daily:[]})});case WEATHER_DAY_SELECTED:return _objectSpread(_objectSpread({},state),{},{selectedDay:action.payload});default:return state;}};","map":{"version":3,"sources":["/Users/ankitsrivastava/Desktop/react/richpanel-weather-app/src/store/reducer.js"],"names":["WEATHER_DAY_SELECTED","WEATHER_LOCATION_QUERY","WEATHER_ERROR","WEATHER_FETCHING","WEATHER_LOCATION_SELECTED","WEATHER_LOCATION_WEATHER_SUCCESS","WEATHER_LOCATION_FETCHING","WEATHER_LOCATION_SUCCESS","WEATHER_SUCCESS","WEATHER_LOCATION_WEATHER_FETCHING","initialState","locations","fetching","query","weathers","results","selectedDay","weather","error","hourly","daily","storeReducer","state","action","type","payload","name"],"mappings":"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","sourcesContent":["import { WEATHER_DAY_SELECTED, WEATHER_LOCATION_QUERY, WEATHER_ERROR, WEATHER_FETCHING, WEATHER_LOCATION_SELECTED, WEATHER_LOCATION_WEATHER_SUCCESS, WEATHER_LOCATION_FETCHING, WEATHER_LOCATION_SUCCESS, WEATHER_SUCCESS, WEATHER_LOCATION_WEATHER_FETCHING } from './actions';\n\nexport const initialState = {\n  locations: {\n    fetching: false,\n    query: '',\n    weathers: [],\n    results: [],\n  },\n  selectedDay: 0,\n  weather: {\n    fetching: true,\n    error: true,\n    hourly: [],\n    daily: [],\n  }\n};\n\nexport const storeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case WEATHER_LOCATION_QUERY:\n      return { ...state, locations: { ...state.locations, query: action.payload } };\n    case WEATHER_LOCATION_FETCHING:\n      return { ...state, locations: { ...state.locations, fetching: true, results: [], weathers: [] } };\n    case WEATHER_LOCATION_SUCCESS:\n      return { ...state, locations: { ...state.locations, fetching: false, ...action.payload } };\n    case WEATHER_LOCATION_SELECTED:\n      return { ...state, locations: { ...state.locations, query: `${action.payload.name}, ${action.payload.state}`, results: [], weathers: [] } };\n    case WEATHER_LOCATION_WEATHER_FETCHING:\n      return { ...state, locations: { ...state.locations, fetching: true, weathers: [] } };\n    case WEATHER_LOCATION_WEATHER_SUCCESS:\n      return { ...state, locations: { ...state.locations, weathers: [...state.locations.weathers, ...action.payload] } };\n    case WEATHER_FETCHING:\n      return { ...state, weather: { ...state.weather, fetching: true, selectedDay: 0, hourly: [], daily: [] } };\n    case WEATHER_SUCCESS:\n      return { ...state, weather: { ...state.weather, fetching: false, hourly: action.payload.hourly, daily: action.payload.daily } };\n    case WEATHER_ERROR:\n      return { ...state, weather: { ...state.weather, fetching: false, error: true, hourly: [], daily: [] } };\n    case WEATHER_DAY_SELECTED:\n      return { ...state, selectedDay: action.payload };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}