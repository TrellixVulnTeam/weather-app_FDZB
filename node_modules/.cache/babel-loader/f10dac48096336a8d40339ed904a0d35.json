{"ast":null,"code":"import moment from\"moment\";export var debounce=function debounce(func,delay){var debounceTimer;return function(){var context=this;var args=arguments;clearTimeout(debounceTimer);debounceTimer=setTimeout(function(){return func.apply(context,args);},delay);};};export var getCelsius=function getCelsius(kelvin){return Math.round(kelvin-273.15,2);};export var getDayName=function getDayName(date){console.log(date);var days=['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];var dayName=days[date.getDay()];return dayName;};export var getImageName=function getImageName(title){switch(title){case'Clouds':return'cloudy.png';case'Rain':return'rain.png';default:return'sun.png';}};export var getHourlyData=function getHourlyData(hourly,selectedDay){var dayStart=moment().startOf('day').add(selectedDay,'days').unix();var dayEnd=moment().endOf('day').add(selectedDay,'days').unix();var hourStart=moment().startOf('hour');var result=[];hourly.forEach(function(h,i){var hour=moment(h.dt*1000).unix();if(hour>=dayStart&&hour<=dayEnd){result.push({temp:h.temp,hour:hour});}});console.log(result);return result;};","map":{"version":3,"sources":["/Users/ankitsrivastava/Desktop/react/richpanel-weather-app/src/utils/index.js"],"names":["moment","debounce","func","delay","debounceTimer","context","args","arguments","clearTimeout","setTimeout","apply","getCelsius","kelvin","Math","round","getDayName","date","console","log","days","dayName","getDay","getImageName","title","getHourlyData","hourly","selectedDay","dayStart","startOf","add","unix","dayEnd","endOf","hourStart","result","forEach","h","i","hour","dt","push","temp"],"mappings":"AAAA,MAAOA,CAAAA,MAAP,KAAmB,QAAnB,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAOC,KAAP,CAAiB,CACvC,GAAIC,CAAAA,aAAJ,CACA,MAAO,WAAY,CACjB,GAAMC,CAAAA,OAAO,CAAG,IAAhB,CACA,GAAMC,CAAAA,IAAI,CAAGC,SAAb,CACAC,YAAY,CAACJ,aAAD,CAAZ,CACAA,aAAa,CAAGK,UAAU,CAAC,iBAAMP,CAAAA,IAAI,CAACQ,KAAL,CAAWL,OAAX,CAAoBC,IAApB,CAAN,EAAD,CAAkCH,KAAlC,CAA1B,CACD,CALD,CAMD,CARM,CAUP,MAAO,IAAMQ,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,MAAD,QAAYC,CAAAA,IAAI,CAACC,KAAL,CAAWF,MAAM,CAAG,MAApB,CAA4B,CAA5B,CAAZ,EAAnB,CAEP,MAAO,IAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAU,CAClCC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACA,GAAMG,CAAAA,IAAI,CAAG,CAAC,KAAD,CAAQ,KAAR,CAAe,KAAf,CAAsB,KAAtB,CAA6B,KAA7B,CAAoC,KAApC,CAA2C,KAA3C,CAAb,CACA,GAAMC,CAAAA,OAAO,CAAGD,IAAI,CAACH,IAAI,CAACK,MAAL,EAAD,CAApB,CACA,MAAOD,CAAAA,OAAP,CACD,CALM,CAOP,MAAO,IAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CACrC,OAAQA,KAAR,EACE,IAAK,QAAL,CACE,MAAO,YAAP,CACF,IAAK,MAAL,CACE,MAAO,UAAP,CACF,QACE,MAAO,SAAP,CANJ,CAQD,CATM,CAWP,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,MAAD,CAASC,WAAT,CAAyB,CACpD,GAAMC,CAAAA,QAAQ,CAAG3B,MAAM,GAAG4B,OAAT,CAAiB,KAAjB,EAAwBC,GAAxB,CAA4BH,WAA5B,CAAyC,MAAzC,EAAiDI,IAAjD,EAAjB,CACA,GAAMC,CAAAA,MAAM,CAAG/B,MAAM,GAAGgC,KAAT,CAAe,KAAf,EAAsBH,GAAtB,CAA0BH,WAA1B,CAAuC,MAAvC,EAA+CI,IAA/C,EAAf,CACA,GAAMG,CAAAA,SAAS,CAAGjC,MAAM,GAAG4B,OAAT,CAAiB,MAAjB,CAAlB,CACA,GAAMM,CAAAA,MAAM,CAAG,EAAf,CACAT,MAAM,CAACU,OAAP,CAAe,SAACC,CAAD,CAAIC,CAAJ,CAAU,CACvB,GAAMC,CAAAA,IAAI,CAAGtC,MAAM,CAACoC,CAAC,CAACG,EAAF,CAAO,IAAR,CAAN,CAAoBT,IAApB,EAAb,CACA,GAAIQ,IAAI,EAAIX,QAAR,EAAoBW,IAAI,EAAIP,MAAhC,CAAwC,CACtCG,MAAM,CAACM,IAAP,CAAY,CAAEC,IAAI,CAAEL,CAAC,CAACK,IAAV,CAAgBH,IAAI,CAAJA,IAAhB,CAAZ,EACD,CACF,CALD,EAMArB,OAAO,CAACC,GAAR,CAAYgB,MAAZ,EACA,MAAOA,CAAAA,MAAP,CACD,CAbM","sourcesContent":["import moment from \"moment\";\n\nexport const debounce = (func, delay) => {\n  let debounceTimer;\n  return function () {\n    const context = this;\n    const args = arguments;\n    clearTimeout(debounceTimer)\n    debounceTimer = setTimeout(() => func.apply(context, args), delay);\n  };\n}\n\nexport const getCelsius = (kelvin) => Math.round(kelvin - 273.15, 2);\n\nexport const getDayName = (date) => {\n  console.log(date);\n  const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  const dayName = days[date.getDay()];\n  return dayName;\n}\n\nexport const getImageName = (title) => {\n  switch (title) {\n    case 'Clouds':\n      return 'cloudy.png';\n    case 'Rain':\n      return 'rain.png';\n    default:\n      return 'sun.png';\n  }\n};\n\nexport const getHourlyData = (hourly, selectedDay) => {\n  const dayStart = moment().startOf('day').add(selectedDay, 'days').unix();\n  const dayEnd = moment().endOf('day').add(selectedDay, 'days').unix();\n  const hourStart = moment().startOf('hour');\n  const result = [];\n  hourly.forEach((h, i) => {\n    const hour = moment(h.dt * 1000).unix();\n    if (hour >= dayStart && hour <= dayEnd) {\n      result.push({ temp: h.temp, hour });\n    }\n  });\n  console.log(result);\n  return result;\n};"]},"metadata":{},"sourceType":"module"}