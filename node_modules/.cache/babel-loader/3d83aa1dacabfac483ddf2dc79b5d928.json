{"ast":null,"code":"import moment from \"moment\";\nexport const debounce = (func, delay) => {\n  let debounceTimer;\n  return function () {\n    const context = this;\n    const args = arguments;\n    clearTimeout(debounceTimer);\n    debounceTimer = setTimeout(() => func.apply(context, args), delay);\n  };\n};\nexport const getCelsius = kelvin => Math.round(kelvin - 273.15, 2);\nexport const getDayName = date => {\n  console.log(date);\n  const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  const dayName = days[date.getDay()];\n  return dayName;\n};\nexport const getImageName = title => {\n  switch (title) {\n    case 'Clouds':\n      return 'cloudy.png';\n\n    case 'Rain':\n      return 'rain.png';\n\n    default:\n      return 'sun.png';\n  }\n};\nexport const getHourlyData = (hourly, selectedDay) => {\n  const dayStart = moment().startOf('day').add(selectedDay, 'days').unix();\n  const dayEnd = moment().endOf('day').add(selectedDay, 'days').unix();\n  const hourStart = moment().startOf('hour');\n  const result = [];\n  hourly.forEach((h, i) => {\n    const hour = moment(h.dt * 1000).unix();\n\n    if (hour >= dayStart && hour <= dayEnd) {\n      result.push({\n        temp: h.temp,\n        hour\n      });\n    }\n  });\n  console.log(result);\n  return result;\n};","map":{"version":3,"sources":["/Users/ankitsrivastava/Desktop/react/richpanel-weather-app/src/utils/index.js"],"names":["moment","debounce","func","delay","debounceTimer","context","args","arguments","clearTimeout","setTimeout","apply","getCelsius","kelvin","Math","round","getDayName","date","console","log","days","dayName","getDay","getImageName","title","getHourlyData","hourly","selectedDay","dayStart","startOf","add","unix","dayEnd","endOf","hourStart","result","forEach","h","i","hour","dt","push","temp"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvC,MAAIC,aAAJ;AACA,SAAO,YAAY;AACjB,UAAMC,OAAO,GAAG,IAAhB;AACA,UAAMC,IAAI,GAAGC,SAAb;AACAC,IAAAA,YAAY,CAACJ,aAAD,CAAZ;AACAA,IAAAA,aAAa,GAAGK,UAAU,CAAC,MAAMP,IAAI,CAACQ,KAAL,CAAWL,OAAX,EAAoBC,IAApB,CAAP,EAAkCH,KAAlC,CAA1B;AACD,GALD;AAMD,CARM;AAUP,OAAO,MAAMQ,UAAU,GAAIC,MAAD,IAAYC,IAAI,CAACC,KAAL,CAAWF,MAAM,GAAG,MAApB,EAA4B,CAA5B,CAA/B;AAEP,OAAO,MAAMG,UAAU,GAAIC,IAAD,IAAU;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAMG,IAAI,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CAAb;AACA,QAAMC,OAAO,GAAGD,IAAI,CAACH,IAAI,CAACK,MAAL,EAAD,CAApB;AACA,SAAOD,OAAP;AACD,CALM;AAOP,OAAO,MAAME,YAAY,GAAIC,KAAD,IAAW;AACrC,UAAQA,KAAR;AACE,SAAK,QAAL;AACE,aAAO,YAAP;;AACF,SAAK,MAAL;AACE,aAAO,UAAP;;AACF;AACE,aAAO,SAAP;AANJ;AAQD,CATM;AAWP,OAAO,MAAMC,aAAa,GAAG,CAACC,MAAD,EAASC,WAAT,KAAyB;AACpD,QAAMC,QAAQ,GAAG3B,MAAM,GAAG4B,OAAT,CAAiB,KAAjB,EAAwBC,GAAxB,CAA4BH,WAA5B,EAAyC,MAAzC,EAAiDI,IAAjD,EAAjB;AACA,QAAMC,MAAM,GAAG/B,MAAM,GAAGgC,KAAT,CAAe,KAAf,EAAsBH,GAAtB,CAA0BH,WAA1B,EAAuC,MAAvC,EAA+CI,IAA/C,EAAf;AACA,QAAMG,SAAS,GAAGjC,MAAM,GAAG4B,OAAT,CAAiB,MAAjB,CAAlB;AACA,QAAMM,MAAM,GAAG,EAAf;AACAT,EAAAA,MAAM,CAACU,OAAP,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACvB,UAAMC,IAAI,GAAGtC,MAAM,CAACoC,CAAC,CAACG,EAAF,GAAO,IAAR,CAAN,CAAoBT,IAApB,EAAb;;AACA,QAAIQ,IAAI,IAAIX,QAAR,IAAoBW,IAAI,IAAIP,MAAhC,EAAwC;AACtCG,MAAAA,MAAM,CAACM,IAAP,CAAY;AAAEC,QAAAA,IAAI,EAAEL,CAAC,CAACK,IAAV;AAAgBH,QAAAA;AAAhB,OAAZ;AACD;AACF,GALD;AAMArB,EAAAA,OAAO,CAACC,GAAR,CAAYgB,MAAZ;AACA,SAAOA,MAAP;AACD,CAbM","sourcesContent":["import moment from \"moment\";\n\nexport const debounce = (func, delay) => {\n  let debounceTimer;\n  return function () {\n    const context = this;\n    const args = arguments;\n    clearTimeout(debounceTimer)\n    debounceTimer = setTimeout(() => func.apply(context, args), delay);\n  };\n}\n\nexport const getCelsius = (kelvin) => Math.round(kelvin - 273.15, 2);\n\nexport const getDayName = (date) => {\n  console.log(date);\n  const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  const dayName = days[date.getDay()];\n  return dayName;\n}\n\nexport const getImageName = (title) => {\n  switch (title) {\n    case 'Clouds':\n      return 'cloudy.png';\n    case 'Rain':\n      return 'rain.png';\n    default:\n      return 'sun.png';\n  }\n};\n\nexport const getHourlyData = (hourly, selectedDay) => {\n  const dayStart = moment().startOf('day').add(selectedDay, 'days').unix();\n  const dayEnd = moment().endOf('day').add(selectedDay, 'days').unix();\n  const hourStart = moment().startOf('hour');\n  const result = [];\n  hourly.forEach((h, i) => {\n    const hour = moment(h.dt * 1000).unix();\n    if (hour >= dayStart && hour <= dayEnd) {\n      result.push({ temp: h.temp, hour });\n    }\n  });\n  console.log(result);\n  return result;\n};"]},"metadata":{},"sourceType":"module"}